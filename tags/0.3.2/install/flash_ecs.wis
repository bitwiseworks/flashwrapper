<WARPIN OS="OS2_4X">
	<HEAD>
	<TITLE>=("init")</TITLE>

        <REXX NAME="init">
	 _title = "Flash Plugin Wrapper for eComStation Beta 1"

	 CrLf = '0d0a'x; _errmsg.1 = ''; _errmsg.2 = ''; _errmsg.3 = ''; _errors = 0

	 /* validate existence and level of Odin32 */
	 bldlevel. = ''
	 rc = bldlevelx('kernel32.dll', 'bldlevel')
         if normalize(bldlevel.!version) < 83 then do
	  _errors = _errors + 1
          _errmsg.1  = '** No valid installation of Odin found **'||crlf
          if bldlevel.!filename = '' then 
	  _errmsg.1 = _errmsg.1 || 'Could not detect any version of Odin on your system.'; else
          _errmsg.1 = _errmsg.1 || 'Your installed version is: '||bldlevel.!version||' but at least level 0.8.3 is required.'
          _errmsg.1 = _errmsg.1 || crlf||'Please make sure you have the proper version of Odin installed.'||crlf||crlf
         end

	 /* validate existence of proper GCC core (gcc446.dll) */
	 bldlevel. = ''
	 rc = bldlevelx('gcc446.dll', 'bldlevel')
	 gcc446 = bldlevel.!filename
	 bldlevel. = ''
	 rc = bldlevelx('ssp.dll', 'bldlevel')
	 ssp = bldlevel.!filename
         if gcc446 = '' | ssp = '' then do
          _errors = _errors + 1
          _errmsg.2 = '** GCC core not detected **'||crlf
          _errmsg.2 = _errmsg.2 || 'Please make sure you have the proper version of GCC (gcc446.dll) installed.'||crlf||crlf
         end

	 /* validate existence of proper LIBC core (libc064.dll) */
	 bldlevel. = ''
	 rc = bldlevelx('libc064.dll', 'bldlevel')
          if bldlevel.!filename = '' then do
	   _errors = _errors + 1
           _errmsg.3 = '** LIBC core not detected **'||crlf
           _errmsg.3 = _errmsg.3 || 'Please make sure you have the proper version of LIBC (libc064.dll) installed.'||crlf||crlf
	  end

	 /* one or more validations failed, abort installer */
         if _errors > 0 then do 
	   if _errors = 1 then _errmsg.title = 'A required component is missing from your system'; else 
	   _errmsg.title = _errors||' required components missing from your system'
           _errmsg.txt =   'Refer to readme.txt for more information on how to obtain the required files.'||crlf||crlf,
	                   '"'||_title||'" installer will now exit.'
           rc = WirexxShowMessage(_errmsg.title, _errmsg.1||_errmsg.2||_errmsg.3||_errmsg.txt,'0001'x) 
           call WirexxCancel;
	 end
	 else do
	   _msg.title = 'All required components present on your system'
           _msg.txt =   'All required components were found on your system!'||crlf||crlf,
			'Please note that it is recommended to de-install any previous Flash 10 Technology Preview package and ',
			'close any running copy of Firefox or Mozilla prior to starting the installer.'||crlf||crlf,
	                '"'||_title||'" installer will now continue.'
           rc = WirexxShowMessage(_msg.title, _msg.txt,'0001'x) 
	 end

	 /* end of REXX init procedure */
	 return _title

	 bldlevelx: procedure expose bldlevel.
         /** @file bldlevelx.cmd
          * Requests the BLDLEVEL information for a given file.
          * Version = '1.1'
          * Author: Dmitriy Kuminov */

          parse arg aFile, aStem

          path = filespec('D', aFile)||filespec('P', aFile)
          name = filespec('N', aFile)

          if (path = '') then do
              /* search for the file in system paths */
              search_path = ''
              ext = translate(right(name, 4))
              if (ext == '.DLL') then do
                  config_sys = SysBootDrive()'\CONFIG.SYS'
                  do while lines(config_sys)
                      line = strip(linein(config_sys))
                      if (left(line, 8) == 'LIBPATH=') then do
                          search_path = substr(line, 9)
                          leave
                      end
                  end
                  call lineout config_sys
                  search_path = SysQueryExtLibPath('B')';'search_path';'SysQueryExtLibPath('E')
              end
              else if (ext == '.EXE') then do
                  search_path = value('PATH',, 'OS2ENVIRONMENT')
              end

              if (search_path \= '') then do
                  call value 'BLDLEVELX_SEARCH_PATH', search_path, 'OS2ENVIRONMENT'
                  real_file = SysSearchPath('BLDLEVELX_SEARCH_PATH', aFile)
                  call value 'BLDLEVELX_SEARCH_PATH',, 'OS2ENVIRONMENT'
              end
              else do
                  real_file = aFile
              end
          end
          else do
              /* use the given file as is */
              real_file = aFile
          end

          if (real_file = '') then return 2
          real_file = stream(real_file, 'C', 'QUERY EXISTS')
          if (real_file = '') then return 2

          queue_name = rxqueue('Create')
          call rxqueue 'Set', queue_name

          'bldlevel.exe' real_file '2>nul | RXQUEUE' queue_name

          if (rc = 0) then do
              call value aStem'.!signature', ''
              call value aStem'.!vendor', ''
              call value aStem'.!revision', ''
              call value aStem'.!datetime', ''
              call value aStem'.!buildmachine', ''
              call value aStem'.!asdid', ''
              call value aStem'.!language', ''
              call value aStem'.!version', ''
              call value aStem'.!description', ''

              do queued()
                  parse pull key':'value
                  value = strip(value)
                  select
                      when key = 'Signature' then call value aStem'.!signature', value
                      when key = 'Vendor' then call value aStem'.!vendor', value
                      when key = 'Revision' then call value aStem'.!revision', value
                      when key = 'Date/Time' then call value aStem'.!datetime', value
                      when key = 'Build Machine' then call value aStem'.!buildmachine', value
                      when key = 'ASD Feature ID' then call value aStem'.!asdid', value
                      when key = 'Language Code' then call value aStem'.!language', value
                      when key = 'File Version' then call value aStem'.!version', value
                      when key = 'Description' then call value aStem'.!description', value
                      otherwise nop
                  end
              end
          end

          call rxqueue 'Delete', queue_name

          call value aStem'.!filename', real_file

          return 0

          /* normalize: procedure to make it possible to mathematically compare buildlevels */
          normalize: procedure
            parse arg version
            parse var version versionH '.' versionT '.' versionD 
            if datatype(versionH, 'N') = 1 & datatype(versionT, 'N') = 1 & datatype(versionD, 'N') = 1 then 
              normalizedversion = 100 * versionH + 10 * versionT + versionD
            else normalizedversion = 0
          return normalizedversion

        </REXX>


	<REXX NAME="GetPathAndRenameOldFlash">
	  rc=rxFuncAdd('SysLoadFuncs','REXXUTIL','SysLoadFuncs')
	  rc=SysLoadFuncs()
	  parse upper arg request .

	  PluginPath=GetPluginPath()

	  if request = 'RENAME' then do
	   /* check and rename old Flash plugins in Mozilla dir */
	   call FlashRename PluginPath
	   /* check and rename old Flash plugins in plugins dir under MOZILLA_HOME*/
	   Browser=WirexxGetEnv('MOZILLA_HOME')'\plugins'
	   call FlashRename Browser
	   /* check and rename old Flash plugins in plugins dir */
	   Browser=WirexxGetEnv('MOZ_PLUGIN_PATH')
	   call FlashRename Browser
	   returncode = 0
	  end
	  else returncode = PluginPath

	  return PluginPath

	FlashRename: procedure
	  parse arg Brws
	  filetorenamefrom=Brws||'\npswf2.dll'
	  /* check for flash version */
	  flash7dll=Brws||'\flashwin.dll'
	  rc=sysfiletree(flash7dll,'flist','FT')
	  if flist.0=0 then
	  do
	    filetorenameto='npswf2.dll.flash5'
	    ren filetorenamefrom filetorenameto
	  end
	  else do
	    filetorenameto='npswf2.dll.flash7'
	    ren filetorenamefrom filetorenameto
	    filetorenamefrom=Brws||'\NPSWF32.dll'
	    filetorenameto='NPSWF32.dll.flash7'
	    ren filetorenamefrom filetorenameto
	    filetorenamefrom=Brws||'\flashwin.dll'
	    filetorenameto='flashwin.dll.flash7'
	    ren filetorenamefrom filetorenameto
	  end
	return

	GetPluginPath: procedure
	  PluginPath=WirexxGetEnv('MOZ_PLUGIN_PATH')
	  if PluginPath='' then do
	  Browser=GetBrowserPath()
	  PluginPath=Browser||'\plugins'
	  /* find possible .env setting file used for RUN!.EXE */
	  rc=sysfiletree(Browser'\*.env','flist','FO')
	  if flist.0 > 0 then
	  do
	  k = 0
	  do i = 1 to flist.0
	    rc = sysfilesearch('MOZ_PLUGIN_PATH', flist.i, 'result.')
	    do j = 1 to result.0
	     if pos('SET', translate(result.j)) = 1 then do
	      k = k + 1
	      parse var result.j . '=' PluginDir.k
	      end
	    end
	  if k > 0 then PluginPath = strip(PluginDir.k)
	  end /* check all .env files in browser dir */
	  end /* one or more .env files found */
	  end /* MOZ_PLUGIN_PATH env was empty */
	  return PluginPath

	GetBrowserPath: procedure
	  Browser=SysIni('USER','WPURLDEFAULTSETTINGS','DefaultBrowserExe')
	  if Browser='ERROR:' then do
	    Browser=SysIni('USER','Mozilla','Home')
	      if Browser='ERROR:' then do
	        rc=WirexxShowMessage('Browser lookup',,
	        'The Mozilla/Firefox browser could not be found!')
	        return 1
	      end
	  end
	  else do
	    exepos=lastpos('\',Browser)
	    if exepos>0 then do
	      Browser=left(Browser,exepos-1)
	    end
	    Browser=strip(Browser,'T','\')
	  end /* Browser dir was found */
	  return Browser

	</REXX>


	<VARPROMPT NAME=MOZILLA_HOME TYPE=PATH>
	The MOZILLA_HOME environment variable was not set up, please enter the path to your webbrowser homedirectory:
	</VARPROMPT>

		<PCK INDEX=12
			PACKAGEID="Mensys BV\Flash for eComStation\Plugin Wrapper\0\3\1"
			TITLE="Flash Plugin Wrapper"
			TARGET="=("GetPathAndRenameOldFlash")"
			NODESELECT
			CLEARPROFILE="USER\Flash10_Plugin\PluginWrapperPath"
                        CREATEOBJECT="REPLACE WPFolder|Flash Plugin Wrapper for eComStation|<WP_APPSFOLDER>|ALWAYSSORT=YES;OBJECTID=<FLASH_FOR_ECS>;"
                        CREATEOBJECT="REPLACE WPProgram|Flash Plugin Wrapper for eComStation^readme|<FLASH_FOR_ECS>|EXENAME=E.EXE;STARTUPDIR=$(12);PARAMETERS=flash.txt;OBJECTID=<FLASH_FOR_ECS_README>;"
                        CREATEOBJECT="WPShadow|.|<WP_DESKTOP>|SHADOWID=<FLASH_FOR_ECS_SHADOW>;OBJECTID=<FLASH_FOR_ECS>;'
		>Flash Plugin Wrapper 0.3.1 for eComStation
		</PCK>

		<PCK INDEX=13
			PACKAGEID="Mensys BV\Flash for eComStation\Win32 plugin\0\11\1"
			TITLE="Adobe Flash Player Win32 plugin"
			TARGET="=("GetPathAndRenameOldFlash")"
			NODESELECT
			CLEARPROFILE="USER\Flash10_Plugin\AdobePluginPath"
                        CREATEOBJECT="REPLACE WPProgram|Flash Plugin Wrapper for eComStation^license|<FLASH_FOR_ECS>|EXENAME=E.EXE;STARTUPDIR=$(12);PARAMETERS=flash.lic;OBJECTID=<FLASH_FOR_ECS_LICENSE>;"
			CREATEOBJECT="WPShadow|.|<FLASH_FOR_ECS>|SHADOWID=$(12)\eula.pdf;"
		>Flash Player 11.1.102.55
		</PCK>

	</HEAD>
	<BODY>
		<PAGE INDEX=1 TYPE=README>
		<NEXTBUTTON TARGET=2>~Next</NEXTBUTTON>
		<TEXT>Flash Plugin Wrapper for eComStation readme</TEXT>
		<README EXTRACTFROMPCK="12" format=PLAIN>flash.txt</README>
		</PAGE>

		<PAGE INDEX=2 TYPE=README>
		<NEXTBUTTON TARGET=3>~I Agree</NEXTBUTTON>
		<TEXT>ADOBE SYSTEMS INCORPORATED Warranty Disclaimer and Software License Agreement.</TEXT>
		<README EXTRACTFROMPCK="12" format=FLOW>flash.lic</README>
		</PAGE>

		<PAGE INDEX=3 TYPE=TEXT>
		<NEXTBUTTON TARGET=4>~Next</NEXTBUTTON>
		<TEXT>
		Warning !

		All active Mozilla/Firefox browsers should be closed before continuing.

		Do you wish to continue?

		Select "Next" to continue.

		Select "Cancel" to abort installation.
		</TEXT>
		</PAGE>

		<PAGE INDEX=4 TYPE=CONTAINER>
		<NEXTBUTTON TARGET=5>~Next</NEXTBUTTON>
		<TEXT>Please select the packages which are to be installed. You may change the target paths for the packages.</TEXT>
		</PAGE>

		<PAGE INDEX=5 TYPE=TEXT>
		<NEXTBUTTON TARGET=0>I~nstall</NEXTBUTTON>
		<TEXT>Press "Install" to begin installing this archive.</TEXT>
		=("GetPathAndRenameOldFlash RENAME")
		</PAGE>
	</BODY>
</WARPIN>
